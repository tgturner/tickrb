# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rspec-sorbet-types` gem.
# Please instead update this file by running `bin/tapioca gem rspec-sorbet-types`.


# frozen_string_literal: true
# typed: strict

# source://rspec-sorbet-types//lib/rspec/sorbet/types/sig.rb#3
module RSpec
  class << self
    # source://rspec-core/3.13.4/lib/rspec/core.rb#70
    def clear_examples; end

    # source://rspec-core/3.13.4/lib/rspec/core.rb#85
    def configuration; end

    # source://rspec-core/3.13.4/lib/rspec/core.rb#49
    def configuration=(_arg0); end

    # source://rspec-core/3.13.4/lib/rspec/core.rb#97
    def configure; end

    # source://rspec-core/3.13.4/lib/rspec/core.rb#194
    def const_missing(name); end

    # source://rspec-core/3.13.4/lib/rspec/core/dsl.rb#42
    def context(*args, &example_group_block); end

    # source://rspec-core/3.13.4/lib/rspec/core.rb#122
    def current_example; end

    # source://rspec-core/3.13.4/lib/rspec/core.rb#128
    def current_example=(example); end

    # source://rspec-core/3.13.4/lib/rspec/core.rb#154
    def current_scope; end

    # source://rspec-core/3.13.4/lib/rspec/core.rb#134
    def current_scope=(scope); end

    # source://rspec-core/3.13.4/lib/rspec/core/dsl.rb#42
    sig { params(args: T.untyped, example_group_block: T.proc.bind(T.class_of(RSpec::Core::ExampleGroup)).void).void }
    def describe(*args, &example_group_block); end

    # source://rspec-core/3.13.4/lib/rspec/core/dsl.rb#42
    def example_group(*args, &example_group_block); end

    # source://rspec-core/3.13.4/lib/rspec/core/dsl.rb#42
    def fcontext(*args, &example_group_block); end

    # source://rspec-core/3.13.4/lib/rspec/core/dsl.rb#42
    def fdescribe(*args, &example_group_block); end

    # source://rspec-core/3.13.4/lib/rspec/core.rb#58
    def reset; end

    # source://rspec-core/3.13.4/lib/rspec/core/shared_example_group.rb#110
    def shared_context(name, *args, &block); end

    # source://rspec-core/3.13.4/lib/rspec/core/shared_example_group.rb#110
    def shared_examples(name, *args, &block); end

    # source://rspec-core/3.13.4/lib/rspec/core/shared_example_group.rb#110
    def shared_examples_for(name, *args, &block); end

    # source://rspec-core/3.13.4/lib/rspec/core.rb#160
    def world; end

    # source://rspec-core/3.13.4/lib/rspec/core.rb#49
    def world=(_arg0); end

    # source://rspec-core/3.13.4/lib/rspec/core/dsl.rb#42
    def xcontext(*args, &example_group_block); end

    # source://rspec-core/3.13.4/lib/rspec/core/dsl.rb#42
    def xdescribe(*args, &example_group_block); end
  end
end

class RSpec::Core::ExampleGroup
  include ::RSpec::Matchers
  include ::RSpec::Mocks::ExampleMethods

  class << self
    sig { params(args: T.untyped, block: T.proc.bind(RSpec::Core::ExampleGroup).void).void }
    def after(*args, &block); end

    sig { params(args: T.untyped, block: T.proc.bind(RSpec::Core::ExampleGroup).void).void }
    def around(*args, &block); end

    sig { params(args: T.untyped, block: T.proc.bind(RSpec::Core::ExampleGroup).void).void }
    def before(*args, &block); end

    sig { params(all_args: T.untyped, block: T.proc.bind(RSpec::Core::ExampleGroup).void).void }
    def it(*all_args, &block); end

    sig { params(all_args: T.untyped, block: T.proc.bind(RSpec::Core::ExampleGroup).void).void }
    def specify(*all_args, &block); end
  end
end

# source://rspec-sorbet-types//lib/rspec/sorbet/types/sig.rb#4
module RSpec::Sorbet; end

# source://rspec-sorbet-types//lib/rspec/sorbet/types/sig.rb#5
module RSpec::Sorbet::Types; end

# source://rspec-sorbet-types//lib/rspec/sorbet/types/sig.rb#6
module RSpec::Sorbet::Types::Sig
  include ::Kernel

  # @param decl [T.proc.bind(T::Private::Methods::DeclBuilder).void]
  # @return [void]
  #
  # source://rspec-sorbet-types//lib/rspec/sorbet/types/sig.rb#15
  def rsig(&decl); end

  class << self
    # @private
    #
    # source://rspec-sorbet-types//lib/rspec/sorbet/types/sig.rb#9
    def extended(sub); end
  end
end

# source://rspec-sorbet-types//lib/rspec/sorbet/types/version.rb#7
RSpec::Sorbet::Types::VERSION_STRING = T.let(T.unsafe(nil), String)
